ID: x
ATRIBUICAO: =
NUMERO: 42
ID: y
ATRIBUICAO: =
BOOLEANO: verdadeiro
SE: se
ABRE_PARENTESE: (
ID: x
MAIOR: >
ID: y
FECHA_PARENTESE: )
ABRE_CHAVE: {
IMPRIMIR: imprimir
ABRE_PARENTESE: (
STRING: x e maior que y
FECHA_PARENTESE: )
FECHA_CHAVE: }
SENAO: senao
ABRE_CHAVE: {
IMPRIMIR: imprimir
ABRE_PARENTESE: (
STRING: y e maior que x ou sao iguais
FECHA_PARENTESE: )
FECHA_CHAVE: }
ID: contador
ATRIBUICAO: =
NUMERO: 0
ENQUANTO: enquanto
ABRE_PARENTESE: (
ID: contador
MENOR: <
NUMERO: 5
FECHA_PARENTESE: )
ABRE_CHAVE: {
IMPRIMIR: imprimir
ABRE_PARENTESE: (
STRING: Contador: {contador}
FECHA_PARENTESE: )
ID: contador
MAIS: +
ATRIBUICAO: =
NUMERO: 1
FECHA_CHAVE: }
ID: MINHA_CONSTANTE
ATRIBUICAO: =
STRING: Valor Constante
ID: resultado_expressao
ATRIBUICAO: =
ABRE_PARENTESE: (
ID: x
MAIS: +
ID: y
FECHA_PARENTESE: )
VEZES: *
NUMERO: 2
MENOS: -
NUMERO: 8
DIVIDE: /
NUMERO: 2
SE: se
ABRE_PARENTESE: (
ID: x
MAIOR: >
NUMERO: 0
FECHA_PARENTESE: )
ABRE_CHAVE: {
IMPRIMIR: imprimir
ABRE_PARENTESE: (
STRING: x e positivo
FECHA_PARENTESE: )
SE: se
ABRE_PARENTESE: (
ID: y
MAIOR: >
NUMERO: 0
FECHA_PARENTESE: )
ABRE_CHAVE: {
IMPRIMIR: imprimir
ABRE_PARENTESE: (
STRING: y tambem e positivo
FECHA_PARENTESE: )
FECHA_CHAVE: }
FECHA_CHAVE: }
FUNCAO: funcao
ID: somar
ABRE_PARENTESE: (
ID: a
VIRGULA: ,
ID: b
FECHA_PARENTESE: )
ABRE_CHAVE: {
RETORNAR: retornar
ID: a
MAIS: +
ID: b
FECHA_CHAVE: }
ID: resultado_soma
ATRIBUICAO: =
ID: somar
ABRE_PARENTESE: (
NUMERO: 10
VIRGULA: ,
NUMERO: 20
FECHA_PARENTESE: )
SE: se
ABRE_PARENTESE: (
ID: condicao_booleana
FECHA_PARENTESE: )
ABRE_CHAVE: {
IMPRIMIR: imprimir
ABRE_PARENTESE: (
STRING: Condicao booleana atendida
FECHA_PARENTESE: )
FECHA_CHAVE: }
ID: mensagem_concatenada
ATRIBUICAO: =
STRING: O valor de x e: 
MAIS: +
ID: x
